{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","fullname","setName","phonenumber","setContact","email","setEmail","textarea","setTextArea","className","type","placeholder","value","onChange","e","target","onClick","test","length","state","console","log","Axios","post","then","response","M","toast","html","classes","uploadField","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAmDeA,EA/CF,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACRC,EADQ,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAERG,EAFQ,KAEIC,EAFJ,OAGQJ,mBAAS,IAHjB,mBAGRK,EAHQ,KAGFC,EAHE,OAIcN,mBAAS,IAJvB,mBAIRO,EAJQ,KAICC,EAJD,KA2Bf,OACI,qBAAKC,UAAU,SAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,OAAd,wBACI,uBAAOC,KAAK,OAAOC,YAAY,cAC3BC,MAAOX,EAAUY,SAAU,SAACC,GAAD,OAAKZ,EAAQY,EAAEC,OAAOH,UACrD,uBAAOF,KAAK,QAAQC,YAAY,UAC5BC,MAAOP,EAAOQ,SAAU,SAACC,GAAD,OAAKR,EAASQ,EAAEC,OAAOH,UACnD,uBAAOF,KAAK,SAASC,YAAY,eAC7BC,MAAOT,EAAaU,SAAU,SAACC,GAAD,OAAKV,EAAWU,EAAEC,OAAOH,UAC3D,0BAAUH,UAAU,uBAAuBE,YAAY,YACnDC,MAAOL,EAAUM,SAAU,SAACC,GAAD,OAAKN,EAAYM,EAAEC,OAAOH,UACzD,wBAAQH,UAAU,oCAAoCC,KAAK,SACvDM,QAAS,YAnCX,WACd,GAAIf,EAIJ,GAAI,gDAAgDgB,KAAKZ,GAKzD,GAAuB,IAApBF,EAAYe,OAAf,CAKA,IAAMC,EAAM,CAAClB,WAASI,QAAMF,cAAYI,YACxCa,QAAQC,IAAIF,GACZG,IAAMC,KAAK,qEAAqEJ,GAC/EK,MAAK,SAAAC,GACJL,QAAQC,IAAII,WAPVC,IAAEC,MAAM,CAACC,KAAM,gCAAiCC,QAAQ,8BALxDH,IAAEC,MAAM,CAACC,KAAM,gBAAiBC,QAAQ,8BALxCH,IAAEC,MAAM,CAACC,KAAM,aAAcC,QAAQ,yBAiCXC,IADlB,0BChCLC,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACI,cAAC,EAAD,OCMOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2f63a788.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport './App.css'\r\nimport Axios from 'axios'\r\nimport M from 'materialize-css'\r\nconst Form = () => {\r\n    const [fullname,setName]=useState(\"\")\r\n    const [phonenumber,setContact]=useState(\"\")\r\n    const [email,setEmail]=useState(\"\")\r\n    const [textarea,setTextArea]=useState(\"\")\r\n    const uploadField=()=>{\r\n        if(!fullname){\r\n            M.toast({html: \"Enter Name\", classes:\"#c62828 red darken-3\"})\r\n              return\r\n        }\r\n        if(!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\r\n        {\r\n            M.toast({html: \"Invalid Email\", classes:\"#c62828 red darken-3\"})\r\n              return\r\n        }\r\n        if(phonenumber.length!=10)\r\n        {\r\n            M.toast({html: \"Enter 10 digit Contact Number\", classes:\"#c62828 red darken-3\"})\r\n              return\r\n        }\r\n        const state={fullname,email,phonenumber,textarea}\r\n        console.log(state)\r\n        Axios.post('https://sheet.best/api/sheets/89643199-b39a-4f9f-bb2a-8b86890e1773',state)\r\n        .then(response => {\r\n          console.log(response);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"myCard\">\r\n            <div className=\"card auth-card\">\r\n                <h2 className=\"fame\">InternTest</h2>\r\n                    <input type=\"text\" placeholder=\"* Full Name\" \r\n                        value={fullname} onChange={(e)=>setName(e.target.value)} /> \r\n                    <input type=\"email\" placeholder=\"* email\" \r\n                        value={email} onChange={(e)=>setEmail(e.target.value)}/>\r\n                    <input type=\"number\" placeholder=\"* Mob Number\"\r\n                        value={phonenumber} onChange={(e)=>setContact(e.target.value)} />\r\n                    <textArea className=\"materialize-textarea\" placeholder=\"text Area\"\r\n                        value={textarea} onChange={(e)=>setTextArea(e.target.value)} />\r\n                    <button className=\"#7e57c2 deep-purple lighten-1 btn\" type=\"submit\"\r\n                        onClick={()=>{uploadField()}}\r\n                        >Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import Form from './Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}